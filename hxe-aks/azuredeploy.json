{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hxePassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password that will be used for the HXE installation."
      }
    },
    "extensionName": {
      "type": "string",
      "metadata": {
        "description": "Name of the AKS agent node extension"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the AKS agent node"
      }
    }
  },
  "variables": {
    "automation": {
      "gitHub": "https://raw.githubusercontent.com/neumanndaniel/kubernetes/master/hxe-aks"
    },
    "apiVersion": {
      "compute": "2017-03-30"
    }
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion').compute]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "resources": [
        {
          "apiVersion": "[variables('apiVersion').compute]",
          "type": "extensions",
          "name": "[parameters('extensionName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(variables('automation').gitHub,'/deploy_HXE_AKS_prereqs.sh')]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('sudo sh deploy_HXE_AKS_prereqs.sh ', parameters('hxePassword'))]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "vmConfig": {
      "value": "[reference(resourceId('Microsoft.Compute/virtualMachines/extensions',parameters('vmName'),'vmScriptExtension')).instanceView.statuses[0].message]",
      "type": "string"
    }
  }
}
