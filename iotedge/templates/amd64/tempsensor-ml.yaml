apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempsensor-ml
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: tempsensor-ml
  minReadySeconds: 5
  template:
    metadata:
      name: tempsensor-ml
      labels:
        app: tempsensor-ml
      annotations:
        isEdgeDeployment: "true"
        targetCondition: "tags.location.building='azure' AND tags.environment='prod'"
        priority: "1"
        loggingOptions: ""
    spec:
      containers:
      - name: tempsensor-ml
        image: mcr.microsoft.com/azureiotedge-simulated-temperature-sensor:1.0
      - name: machinelearningmodule
        image: azstcr1.azurecr.io/machinelearningmodule:2
      nodeSelector:
        type: virtual-kubelet
      tolerations:
      - key: azure.com/iotedge
        effect: NoSchedule
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: edgeagent
data:
  desiredProperties: |
    {
      "runtime": {
        "settings": {
          "registryCredentials": {
            "docker": {
              "address": "REDACTED",
              "password": "REDACTED",
              "username": "REDACTED"
            }
          }
        }
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: edgehub
data:
  desiredProperties: |
    {
      "routes": {
        "sensorToMachineLearning":"FROM /messages/modules/tempsensor-ml/outputs/temperatureOutput INTO BrokeredEndpoint(\"/modules/machinelearningmodule/inputs/amlInput\")",
        "machineLearningToIoTHub": "FROM /messages/modules/machinelearningmodule/outputs/amlOutput INTO $upstream"
      },
      "storeAndForwardConfiguration": {
        "timeToLiveSecs": 5
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tempsensor-ml
data:
  status: running
  restartPolicy: always
  version: "1.0"
  createOptions: |
    {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: machinelearningmodule
data:
  status: running
  restartPolicy: always
  version: "1.0"
  createOptions: |
    {}
